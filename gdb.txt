//////////////////////////////
Detailed list of GDB commands:
http://web.cecs.pdx.edu/~jrb/cs201/lectures/handouts/gdbcomm.txt

///////////////////
From gracker.org:
 ● `disassemble main` - look at the assembly code of the main function
 ● `break *0x12345678` - set a breakpoint at address 0x12345678
 ● `x 0x12345678` - examine/print the content of address 0x12345678
 ● `x/xw 0x12345678` - print the content of address 0x12345678 as hex word
 ● `x/s 0x12345678` - print the content of address 0x12345678 as a string
 ● `run` - run/restart the program you are debugging
 ● `continue` - continue execution after you stopped at a breakpoint
 ● `quit` - exit gdb


///////////////////
Common GDB commands:
unset environment // remove all environment variables, to try and make your exploit work at the shell

break main // stop execution at the main function for debugging
disas main // check the assembly code associated with the main function

info variables // display global and static variables
info locals  // display local variables
info args // list names and values of arguments for the stack frame

r < /tmp/exploit // run the program, piping your exploit in for execution

x/100xw $esp-64 // look at 100 words that are in $esp minus 64
x/x $ebp-4 // check the contents of EBP minus 4, using word format (format not specified)
x/xs $ebp-4 // check the contents of strings in EBP minus 4 
x/s 0xbff2d5f8 // look at strings in a given memory location
x/100xb *0xbffff7d4 // look at contents of memory using a pointer, and display in bytes
s (si)
n


/////////
NOP = x90


/////////////////////
Shellcode for /bin/sh
\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80


//////////////////////////////
Finding environment variables:
  http://security.stackexchange.com/questions/13194/finding-environment-variables-with-gdb-to-exploit-a-buffer-overflow

(gdb) x/wx $ebp+0x10 
0xffffd3f8: 0xffffd48c

(gdb) x/wx 0xffffd48c
0xffffd48c: 0xffffd67e

(gdb) x/s 0xffffd67e
0xffffd67e: "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0"

(gdb) (gdb) x/wx 0xffffd48c+4
0xffffd490: 0xffffd6b2

(gdb) x/s 0xffffd6b2
0xffffd6b2: "XDG_CONFIG_DIRS=/etc/xd


////////////////////////////
Better way to find env vars:

	x/s *((char **)environ)
	x/20s 0xbffffe13
  x/s 0x600db0      //view(examine) content (string) in specific location

/////////////////////////////////////
Finding strings to execute in memory -- essential for return 2 libc:
p &system
p &exit
find &system, +999999, "/bin/sh"
